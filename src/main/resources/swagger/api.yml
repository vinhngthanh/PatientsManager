openapi: '3.0.3'
info:
  title: 'Patient APIs'
  version: 0.0.1
servers:
  - url: http://localhost:8080
    description: Development server
paths:
  /patients:
    get:
      description: Get all patients
      operationId: getAllPatients
      tags:
        - "patients"
      parameters:
        - name: criteria
          in: query
          required: false
          schema:
            $ref: "#/components/schemas/PatientCriteria"
        - name: pageable
          in: query
          required: false
          schema:
            $ref: "#/components/schemas/Pageable"
      responses:
        200:
          description: All patients loaded successfully
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/PageDto"
    post:
      description: Create a new patient
      operationId: createPatients
      tags:
        - "patients"
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/PatientRequest"
      responses:
        201:
          description: Patient created successfully
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/PatientDto"
  /patients/{id}:
    get:
      description: Get a patient by ID
      operationId: getPatientById
      tags:
        - "patients"
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
            format: int64
      responses:
        200:
          description: Patient loaded successfully
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/PatientDto"
    put:
      description: Update an existing patient
      operationId: updatePatient
      tags:
        - "patients"
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
            format: int64
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/PatientRequest"
      responses:
        200:
          description: Patient updated successfully
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/PatientDto"
    delete:
      description: Delete a patient by ID
      operationId: deletePatient
      tags:
        - "patients"
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
            format: int64
      responses:
        204:
          description: Patient deleted successfully
components:
  schemas:
    PatientRequest:
      type: object
      required:
        - name
        - gender
        - age
        - phoneNumber
      properties:
        name:
          type: string
          description: "Name of the patient"
        gender:
          type: string
          description: "Gender of the patient"
        age:
          type: integer
          description: "Age of the patient"
        email:
          type: string
          description: "Email address of the patient"
        phoneNumber:
          type: string
          pattern: "^\+\d{1,3}-\d{3}-\d{3}-\d{4}$"
          description: "Phone number of the patient"
    PatientDto:
      type: object
      required:
        - patientId
        - name
        - gender
        - age
        - phoneNumber
      properties:
        patientId:
          type: integer
          format: int64
          description: "Id of the patient"
        name:
          type: string
          description: "Name of the patient"
        gender:
          type: string
          description: "Gender of the patient"
        age:
          type: integer
          description: "Age of the patient"
        email:
          type: string
          description: "Email address of the patient"
        phoneNumber:
          type: string
          pattern: "^\+\d{1,3}-\d{3}-\d{3}-\d{4}$"
          description: "Phone number of the patient"
        createdAt:
          type: string
          format: date-time
          description: "Time created patient"
        updatedAt:
          type: string
          format: date-time
          description: "Time updated patient"
    PatientCriteria:
      type: object
      properties:
        id:
          type: integer
          format: int64
        name:
          type: string
        gender:
          type: string
        age:
          type: integer
        email:
          type: string
        phoneNumber:
          type: string
          pattern: "^\+\d{1,3}-\d{3}-\d{3}-\d{4}$"
    Pageable:
      type: object
      properties:
        page:
          type: integer
          minimum: 0
          default: 0
        size:
          type: integer
          minimum: 0
          maximum: 100
          default: 20
    PageDto:
      type: object
      properties:
        content:
          type: array
          items:
            $ref: "#/components/schemas/PatientDto"
        totalPages:
          type: integer
        pageSize:
          type: integer
        pageNumber:
          type: integer
        totalElements:
          type: integer