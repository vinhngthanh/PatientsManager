openapi: '3.0.3'
info:
  title: 'Patient APIs'
  version: 0.0.1
servers:
  - url: http://localhost:8080
    description: Development server
paths:
  /:
    get:
      description: Get all patients
      operationId: getAllPatients
      tags:
        - "patients"
      parameters:
        - name: criteria
          in: query
          required: false
          schema:
            $ref: "#/components/schemas/FilterPatient"
        - name: pageable
          in: query
          required: false
          schema:
            $ref: "#/components/schemas/Pageable"
      responses:
        200:
          description: All patients loaded successfully
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/PageDto"
    post:
      description: Create a new patient
      operationId: createPatients
      tags:
        - "patients"
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/PatientRequest"
      responses:
        201:
          description: Patient created successfully
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/PatientDto"
  /{id}:
    get:
      description: Get a patient by ID
      operationId: getPatientById
      tags:
        - "patients"
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
            format: int64
      responses:
        200:
          description: Patient loaded successfully
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/PatientDto"
    put:
      description: Update an existing patient
      operationId: updatePatient
      tags:
        - "patients"
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
            format: int64
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/PatientRequest"
      responses:
        200:
          description: Patient updated successfully
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/PatientDto"
    delete:
      description: Delete a patient by ID
      operationId: deletePatient
      tags:
        - "patients"
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
            format: int64
      responses:
        204:
          description: Patient deleted successfully
components:
  parameters:
    id:
      name: id
      in: path
      required: true
      schema:
        type: string
        format: uuid
    pageable:
      name: pageable
      in: query
      required: false
      schema:
        $ref: '#/components/schemas/Pageable'
  schemas:
    Pageable:
      type: object
      description: This object will be overridden by Spring's Pageable
      properties:
        page:
          type: integer
          minimum: 0
          default: 0
        size:
          type: integer
          minimum: 1
          maximum: 100
          default: 20
        sort:
          type: array
          items:
            type: string
          example: createdAt,DESC
    HealthResponseDto:
      type: object
      properties:
        status:
          type: string
    FilterPatient:
      type: object
      properties:
        searchWord:
          type: string
    PatientDto:
      type: object
      properties:
        searchWord:
          type: string
    PatientRequest:
      type: object
      properties:
        searchWord:
          type: string
    CreatePatient:
      type: object
      properties:
        searchWord:
          type: string
    AnimalPaginatedDto:
      type: object
      properties:
        total:
          type: integer
          format: int64
        data:
          type: array
          items:
            $ref: '#/components/schemas/AnimalDto'
    AnimalDto:
      type: object
      properties:
        id:
          type: string
          format: uuid
        name:
          type: string
        status:
          type: string
        birthday:
          type: string
          format: date
        type:
          type: string
        gender:
          type: string
        tenantId:
          type: string
        joinedDate:
          type: string
          format: date-time
    PageDto:
      type: object
      properties:
        status:
          type: string